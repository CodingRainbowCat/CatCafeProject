{
	"info": {
		"_postman_id": "52145ad7-b6b6-446a-8dcd-1c83ce5a6147",
		"name": "CatCafe-Newman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44723779",
		"_collection_link": "https://sofiasanabria.postman.co/workspace/CatCafe~86747762-9c28-4897-8796-30314f43ee11/collection/44796494-52145ad7-b6b6-446a-8dcd-1c83ce5a6147?action=share&source=collection_link&creator=44723779"
	},
	"item": [
		{
			"name": "Adopters",
			"item": [
				{
					"name": "POST",
					"item": [
						{
							"name": "Add a new cat adopter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",\r\n  \"phone\": \"{{adopterPhone}}\",\r\n  \"address\": \"{{adopterAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Existent cat adopter different id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/adopters\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": pm.collectionVariables.get(\"adopterName\"),",
											"            \"lastName\": pm.collectionVariables.get(\"adopterLastName\").toString(),",
											"            \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",",
											"            \"phone\": pm.collectionVariables.get(\"adopterPhone\").toString(),",
											"            \"address\": pm.collectionVariables.get(\"adopterAddress\").toString()",
											"        })",
											"    }",
											"}, (err, adopter) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(adopter.json());",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",\r\n  \"phone\": \"{{adopterPhone}}\",\r\n  \"address\": \"{{adopterAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Existent cat adopter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/adopters\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": pm.collectionVariables.get(\"adopterName\"),",
											"            \"lastName\": pm.collectionVariables.get(\"adopterLastName\").toString(),",
											"            \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",",
											"            \"phone\": pm.collectionVariables.get(\"adopterPhone\").toString(),",
											"            \"address\": pm.collectionVariables.get(\"adopterAddress\").toString()",
											"        })",
											"    }",
											"}, (err, adopter) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(adopter.json());",
											"        pm.collectionVariables.set(\"adopterID\", adopter.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",\r\n  \"phone\": \"{{adopterPhone}}\",\r\n  \"address\": \"{{adopterAddress}}\",\r\n  \"id\": {{adopterID}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cat adopter empty phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Phone number must have at least 8 digits\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",\r\n  \"phone\": \"\",\r\n  \"address\": \"{{adopterAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cat adopter empty address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",\r\n  \"phone\": \"{{adopterPhone}}\",\r\n  \"address\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cat adopter empty date of birth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"dateOfBirth\": \"\",\r\n  \"phone\": \"{{adopterPhone}}\",\r\n  \"address\": \"{{adopterAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cat adopter empty last name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"lastName\": \"\",\r\n  \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",\r\n  \"phone\": \"{{adopterPhone}}\",\r\n  \"address\": \"{{adopterAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cat adopter empty name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"\",\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",\r\n  \"phone\": \"{{adopterPhone}}\",\r\n  \"address\": \"{{adopterAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cat adopter without name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",\r\n  \"phone\": \"{{adopterPhone}}\",\r\n  \"address\": \"{{adopterAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cat adopter without last name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",\r\n  \"phone\": \"{{adopterPhone}}\",\r\n  \"address\": \"{{adopterAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cat adopter without date of birth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"phone\": \"{{adopterPhone}}\",\r\n  \"address\": \"{{adopterAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cat adopter without phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",\r\n  \"address\": \"{{adopterAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cat adopter without address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",\r\n  \"phone\": \"{{adopterPhone}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Empty request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"error\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cat adopter younger than 18 years old",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"dateOfBirth\": \"{{$isoTimestamp}}\",\r\n  \"phone\": \"{{adopterPhone}}\",\r\n  \"address\": \"{{adopterAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cat adopter null date of birth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The adopter must be at least 18 years old to adopt a cat\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{adopterName}}\",\r\n  \"lastName\": \"{{adopterLastName}}\",\r\n  \"dateOfBirth\": \"null\",\r\n  \"phone\": \"{{adopterPhone}}\",\r\n  \"address\": \"{{adopterAddress}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET",
					"item": [
						{
							"name": "All cat adopters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/adopters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create and get adopter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/adopters\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": pm.collectionVariables.get(\"adopterName\"),",
											"            \"lastName\": pm.collectionVariables.get(\"adopterLastName\").toString(),",
											"            \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",",
											"            \"phone\": pm.collectionVariables.get(\"adopterPhone\").toString(),",
											"            \"address\": pm.collectionVariables.get(\"adopterAddress\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"adopterID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/adopters/{{adopterID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters",
										"{{adopterID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Non existent adopter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/adopters\").toString(),",
											"    method: \"GET\"",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        const elements = response.json()",
											"        let ids = []",
											"        elements.forEach((element) =>",
											"            ids.push(element.id)",
											"        )",
											"        console.log(Math.max(...ids))",
											"        const lastID = Math.max(...ids)",
											"        pm.collectionVariables.set(\"adopterID\", lastID + 1);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Adopter not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/adopters/{{adopterID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters",
										"{{adopterID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Not valid adopter id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"try {",
											"    pm.collectionVariables.set(\"adopterID\", \"Cat\");",
											"} catch (err) {",
											"    console.error(err);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Adopter not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/adopters/{{adopterID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters",
										"{{adopterID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "Delete adopter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/adopters\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": pm.collectionVariables.get(\"adopterName\"),",
											"            \"lastName\": pm.collectionVariables.get(\"adopterLastName\").toString(),",
											"            \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",",
											"            \"phone\": pm.collectionVariables.get(\"adopterPhone\").toString(),",
											"            \"address\": pm.collectionVariables.get(\"adopterAddress\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"adopterID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/adopters/{{adopterID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters",
										"{{adopterID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete adopter with a cat",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/adopters\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": pm.collectionVariables.get(\"adopterName\"),",
											"            \"lastName\": pm.collectionVariables.get(\"adopterLastName\").toString(),",
											"            \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",",
											"            \"phone\": pm.collectionVariables.get(\"adopterPhone\").toString(),",
											"            \"address\": pm.collectionVariables.get(\"adopterAddress\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"adopterID\", response.json().id);",
											"        pm.sendRequest({",
											"            url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"            method: \"POST\",",
											"            header: {",
											"                \"Content-Type\": \"application/json\"",
											"            },",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({",
											"                    \"name\": \"Oliver\",",
											"                    \"age\": 2,",
											"                    \"breed\": \"Persian\",",
											"                    \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"                    \"vaccinated\": true,",
											"                    \"temperament\": [",
											"                        \"Calm\"",
											"                    ],",
											"                    \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"                    \"isAdopted\": true,",
											"                    \"adopterId\": response.json().id",
											"                })",
											"            }",
											"        }, (err, cat) => {",
											"            if (err) {",
											"                console.log(\"Error in request:\", err);",
											"            } else {",
											"                console.log(cat.json())",
											"            }",
											"        })",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Adopters can not be deleted if the adoption was carried out\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/adopters/{{adopterID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters",
										"{{adopterID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete non existent adopter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/adopters\").toString(),",
											"    method: \"GET\"",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        const elements = response.json()",
											"        let ids = []",
											"        elements.forEach((element) =>",
											"            ids.push(element.id)",
											"        )",
											"        const lastID = Math.max(...ids)",
											"        pm.collectionVariables.set(\"adopterID\", lastID + 1);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Adopter not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/adopters/{{adopterID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters",
										"{{adopterID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete not valid adopter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"try {",
											"    pm.collectionVariables.set(\"adopterID\", \"Cat\");",
											"} catch (err) {",
											"    console.error(err);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Adopter not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/adopters/{{adopterID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters",
										"{{adopterID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete empty adopter id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"try {",
											"    pm.collectionVariables.set(\"adopterID\", \"\");",
											"} catch (err) {",
											"    console.error(err);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Authentication required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/adopters/{{adopterID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters",
										"{{adopterID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete empty adopter id authenticated",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"            \"password\": pm.collectionVariables.get(\"password\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        pm.sendRequest({",
											"            url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/login\").toString(),",
											"            method: \"POST\",",
											"            header: {",
											"                \"Content-Type\": \"application/json\",",
											"                \"x-skip-rate-limit\": \"true\"",
											"            },",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({",
											"                    \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"                    \"password\": pm.collectionVariables.get(\"password\").toString()",
											"                })",
											"            }",
											"        }, (err, login) => {",
											"            if (err) {",
											"                console.log(\"Error in request:\", err);",
											"            } else {",
											"                console.log(login.json());",
											"                pm.collectionVariables.set(\"token\", login.json().accessToken)",
											"                pm.collectionVariables.set(\"adopterID\", \"\");",
											"            }",
											"        })",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Cannot DELETE /api/adopters/\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/adopters/{{adopterID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"adopters",
										"{{adopterID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "POST",
					"item": [
						{
							"name": "Register user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"User registered successfully\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/auth/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register user and login",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"            \"password\": pm.collectionVariables.get(\"password\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"accessToken\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-skip-rate-limit",
										"value": "true",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register existent username",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"            \"password\": pm.collectionVariables.get(\"password\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Username already exists\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/auth/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register empty username",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Username and password are required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"\",\r\n  \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/auth/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register empty password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Username and password are required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/auth/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login empty username",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"            \"password\": pm.collectionVariables.get(\"password\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Username and password are required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-skip-rate-limit",
										"value": "true",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"\",\r\n  \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login empty password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"            \"password\": pm.collectionVariables.get(\"password\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Username and password are required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-skip-rate-limit",
										"value": "true",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login non existent user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"            \"password\": pm.collectionVariables.get(\"password\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invalid credentials\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-skip-rate-limit",
										"value": "true",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"Cat\",\r\n  \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login not valid password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"            \"password\": pm.collectionVariables.get(\"password\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invalid credentials\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-skip-rate-limit",
										"value": "true",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"Cat\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refresh token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"            \"password\": pm.collectionVariables.get(\"password\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        pm.sendRequest({",
											"            url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/login\").toString(),",
											"            method: \"POST\",",
											"            header: {",
											"                \"Content-Type\": \"application/json\",",
											"                \"x-skip-rate-limit\": \"true\"",
											"            },",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({",
											"                    \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"                    \"password\": pm.collectionVariables.get(\"password\").toString()",
											"                })",
											"            }",
											"        }, (err, login) => {",
											"            if (err) {",
											"                console.log(\"Error in request:\", err);",
											"            } else {",
											"                console.log(login.json());",
											"                pm.collectionVariables.set(\"token\", login.json().accessToken)",
											"            }",
											"        })",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"accessToken\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"refreshToken\": \"{{token}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/auth/refresh",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"refresh"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refresh not valid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"            \"password\": pm.collectionVariables.get(\"password\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        pm.sendRequest({",
											"            url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/login\").toString(),",
											"            method: \"POST\",",
											"            header: {",
											"                \"Content-Type\": \"application/json\",",
											"                \"x-skip-rate-limit\": \"true\"",
											"            },",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({",
											"                    \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"                    \"password\": pm.collectionVariables.get(\"password\").toString()",
											"                })",
											"            }",
											"        }, (err, login) => {",
											"            if (err) {",
											"                console.log(\"Error in request:\", err);",
											"            } else {",
											"                console.log(login.json());",
											"                pm.collectionVariables.set(\"token\", login.json().accessToken)",
											"            }",
											"        })",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invalid refresh token. JsonWebTokenError: jwt malformed\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"refreshToken\": \"Cat\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/auth/refresh",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"refresh"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refresh empty token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"            \"password\": pm.collectionVariables.get(\"password\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        pm.sendRequest({",
											"            url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/login\").toString(),",
											"            method: \"POST\",",
											"            header: {",
											"                \"Content-Type\": \"application/json\",",
											"                \"x-skip-rate-limit\": \"true\"",
											"            },",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({",
											"                    \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"                    \"password\": pm.collectionVariables.get(\"password\").toString()",
											"                })",
											"            }",
											"        }, (err, login) => {",
											"            if (err) {",
											"                console.log(\"Error in request:\", err);",
											"            } else {",
											"                console.log(login.json());",
											"                pm.collectionVariables.set(\"token\", login.json().accessToken)",
											"            }",
											"        })",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Refresh token is required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"refreshToken\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/auth/refresh",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"refresh"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Cats",
			"item": [
				{
					"name": "POST",
					"item": [
						{
							"name": "Add new cat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const schema = {",
											"    \"name\": \"Clover\",",
											"    \"age\": 1,",
											"    \"breed\": \"Persian\",",
											"    \"dateJoined\": \"2025-05-08T18:19:37.105Z\",",
											"    \"vaccinated\": true,",
											"    \"temperament\": [",
											"        \"Curious\"",
											"    ],",
											"    \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"    \"isAdopted\": false",
											"}",
											"pm.test('Correct cat data', function() {",
											"  pm.response.to.have.jsonSchema(schema);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"packages": {},
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add adopted new cat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/adopters\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": pm.collectionVariables.get(\"adopterName\"),",
											"            \"lastName\": pm.collectionVariables.get(\"adopterLastName\").toString(),",
											"            \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",",
											"            \"phone\": pm.collectionVariables.get(\"adopterPhone\").toString(),",
											"            \"address\": pm.collectionVariables.get(\"adopterAddress\").toString()",
											"        })",
											"    }",
											"}, (err, adopter) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(adopter.json());",
											"        pm.collectionVariables.set(\"adopterID\", adopter.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": true,\r\n  \"adopterId\": {{adopterID}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add adopted new cat without AdopterId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"AdopterId must be specified when the cat is adopted\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat not vaccinated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": false,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat without vaccinated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat empty breed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": false,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat without breed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": false,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat empty staff in charge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat without staff in charge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat with negative age",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Number must be greater than 0\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": -1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat without age",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat empty name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat without name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat with null date joined",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Expected date, received null\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": null,\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat empty date joined",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat without date joined",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat without temperament",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": true,\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new cat without is adopted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Clover\",\r\n  \"age\": 1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-08T18:19:37.105Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Curious\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all cats",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/cats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a cat by id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"    \"name\": \"Oliver\",",
											"    \"age\": 2,",
											"    \"breed\": \"Persian\",",
											"    \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"    \"vaccinated\": true,",
											"    \"temperament\": [",
											"        \"Calm\"",
											"    ],",
											"    \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"    \"isAdopted\": false,",
											"    \"id\": pm.collectionVariables.get(\"catID\")",
											"}",
											"",
											"pm.test('Correct cat data', function() {",
											"  pm.response.to.have.jsonSchema(schema);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a cat non existent id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"GET\",",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        const elements = response.json()",
											"        let ids = []",
											"        elements.forEach((element) =>",
											"            ids.push(element.id)",
											"        )",
											"        console.log(ids)",
											"        const lastID = Math.max(...ids)",
											"        pm.collectionVariables.set(\"catID\", lastID + 1);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Cat not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a cat not valid id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"try {",
											"    pm.collectionVariables.set(\"catID\", \"Cat\");",
											"} catch (err) {",
											"    console.error(err);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Cat not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "Update cat data",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"  \"name\": \"Oli\",",
											"  \"age\": 3,",
											"  \"breed\": \"Persian\",",
											"  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",",
											"  \"vaccinated\": true,",
											"  \"temperament\": [",
											"    \"Playful\", ",
											"    \"Nervous\"",
											"  ],",
											"  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"  \"isAdopted\": false,",
											"  \"id\": pm.collectionVariables.get(\"catID\")",
											"}",
											"",
											"pm.test('Correct cat data', function() {",
											"  pm.response.to.have.jsonSchema(schema);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": 3,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Playful\", \r\n    \"Nervous\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update adopted cat data",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"        pm.sendRequest({",
											"            url: (pm.collectionVariables.get(\"base_url\") + \"/api/adopters\").toString(),",
											"            method: \"POST\",",
											"            header: {",
											"                \"Content-Type\": \"application/json\"",
											"            },",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({",
											"                    \"name\": pm.collectionVariables.get(\"adopterName\"),",
											"                    \"lastName\": pm.collectionVariables.get(\"adopterLastName\").toString(),",
											"                    \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",",
											"                    \"phone\": pm.collectionVariables.get(\"adopterPhone\").toString(),",
											"                    \"address\": pm.collectionVariables.get(\"adopterAddress\").toString()",
											"                })",
											"            }",
											"        }, (err, adopter) => {",
											"            if (err) {",
											"                console.log(\"Error in request:\", err);",
											"            } else {",
											"                console.log(adopter.json().id)",
											"                pm.collectionVariables.set(\"adopterID\", adopter.json().id);",
											"            }",
											"        })",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"  \"name\": \"Oli\",",
											"  \"age\": 3,",
											"  \"breed\": \"Persian\",",
											"  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",",
											"  \"vaccinated\": true,",
											"  \"temperament\": [",
											"    \"Playful\", ",
											"    \"Nervous\"",
											"  ],",
											"  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"  \"isAdopted\": false,",
											"  \"id\": pm.collectionVariables.get(\"catID\")",
											"}",
											"",
											"pm.test('Correct cat data', function() {",
											"  pm.response.to.have.jsonSchema(schema);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": 3,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Playful\", \r\n    \"Nervous\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": true,\r\n  \"adopterId\": {{adopterID}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat data not valid temperament",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"invalid_enum_value\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": 3,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Crazy\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat data empty string temperament",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"invalid_enum_value\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": 3,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\"\"],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat data empty temperament",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"[]\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": 3,\r\n  \"breed\": \"Orange\",\r\n  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat data empty staff in charge",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"invalid_string\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": 3,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Playful\", \r\n    \"Nervous\"\r\n  ],\r\n  \"staffInCharge\": \"\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat data not valid staff in charge",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"invalid_string\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": 3,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Playful\", \r\n    \"Nervous\"\r\n  ],\r\n  \"staffInCharge\": \"Cat\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat data empty breed",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"String must contain at least 1 character(s)\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": 3,\r\n  \"breed\": \"\",\r\n  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Playful\", \r\n    \"Nervous\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat data not valid breed",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Expected string, received number\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": 3,\r\n  \"breed\": 12345,\r\n  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Playful\", \r\n    \"Nervous\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat data negative age",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Number must be greater than 0\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": -1,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Playful\", \r\n    \"Nervous\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat data empty age",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Expected number, received string\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": \"\",\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Playful\", \r\n    \"Nervous\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat data empty name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"String must contain at least 1 character(s)\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"\",\r\n  \"age\": 3,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"2025-05-09T19:28:01.712Z\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Playful\", \r\n    \"Nervous\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat data empty date joined",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": 3,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": \"\",\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Playful\", \r\n    \"Nervous\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat data null date joined",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Oli\",\r\n  \"age\": 3,\r\n  \"breed\": \"Persian\",\r\n  \"dateJoined\": null,\r\n  \"vaccinated\": true,\r\n  \"temperament\": [\r\n    \"Playful\", \r\n    \"Nervous\"\r\n  ],\r\n  \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"isAdopted\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PATCH",
					"item": [
						{
							"name": "Update cat adopter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"        //adopter",
											"        pm.sendRequest({",
											"            url: (pm.collectionVariables.get(\"base_url\") + \"/api/adopters\").toString(),",
											"            method: \"POST\",",
											"            header: {",
											"                \"Content-Type\": \"application/json\"",
											"            },",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({",
											"                    \"name\": pm.collectionVariables.get(\"adopterName\"),",
											"                    \"lastName\": pm.collectionVariables.get(\"adopterLastName\").toString(),",
											"                    \"dateOfBirth\": \"2000-05-06T17:28:27.459Z\",",
											"                    \"phone\": pm.collectionVariables.get(\"adopterPhone\").toString(),",
											"                    \"address\": pm.collectionVariables.get(\"adopterAddress\").toString()",
											"                })",
											"            }",
											"        }, (err, adopter) => {",
											"            if (err) {",
											"                console.log(\"Error in request:\", err);",
											"            } else {",
											"                console.log(adopter.json());",
											"                pm.collectionVariables.set(\"adopterID\", adopter.json().id);",
											"            }",
											"        })",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"    \"name\": \"Oliver\",",
											"    \"age\": 2,",
											"    \"breed\": \"Persian\",",
											"    \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"    \"vaccinated\": true,",
											"    \"temperament\": [",
											"        \"Calm\"",
											"    ],",
											"    \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"    \"isAdopted\": true,",
											"    \"id\": pm.collectionVariables.get(\"catID\"),",
											"    \"adopterId\": pm.collectionVariables.get(\"adopterID\")",
											"};",
											"",
											"pm.test('Correct cat data', function() {",
											"  pm.response.to.have.jsonSchema(schema);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"adopterId\": {{adopterID}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat adopter non existent adopter id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"        //adopter",
											"        pm.sendRequest({",
											"            url: (pm.collectionVariables.get(\"base_url\") + \"/api/adopters\").toString(),",
											"            method: \"GET\",",
											"        }, (err, adopter) => {",
											"            if (err) {",
											"                console.log(\"Error in request:\", err);",
											"            } else {",
											"                console.log(adopter.json());",
											"                const elements = adopter.json()",
											"                let ids = []",
											"                elements.forEach((element) =>",
											"                    ids.push(element.id)",
											"                )",
											"                console.log(ids)",
											"                const lastID = Math.max(...ids)",
											"                pm.collectionVariables.set(\"adopterID\", lastID + 1);",
											"            }",
											"        })",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Adopter not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"adopterId\": {{adopterID}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat adopter empty adopter id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Expected number, received string\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"adopterId\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat adopter not valid adopter id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Expected number, received string\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"adopterId\": \"Cat\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat staff in charge",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"        pm.sendRequest({",
											"            url: (pm.collectionVariables.get(\"base_url\") + \"/api/staff\").toString(),",
											"            method: \"POST\",",
											"            header: {",
											"                \"Content-Type\": \"application/json\",",
											"                \"Authorization\": \"Bearer \" + pm.collectionVariables.get(\"token\")",
											"            },",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({",
											"                    \"name\": pm.collectionVariables.get(\"staffName\").toString(),",
											"                    \"lastName\": pm.collectionVariables.get(\"staffLastName\").toString(),",
											"                    \"age\": 30,",
											"                    \"dateJoined\": \"2025-05-09T18:24:45.220Z\",",
											"                    \"role\": \"Cat petting manager\"",
											"                })",
											"            }",
											"        }, (err, addStaff) => {",
											"            if (err) {",
											"                console.log(\"Error in request:\", err);",
											"            } else {",
											"                console.log(addStaff.json());",
											"                console.log(addStaff.json().id);",
											"                pm.collectionVariables.set(\"staffID\", addStaff.json().id);",
											"            }",
											"        })",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"    \"name\": \"Oliver\",",
											"    \"age\": 2,",
											"    \"breed\": \"Persian\",",
											"    \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"    \"vaccinated\": true,",
											"    \"temperament\": [",
											"        \"Calm\"",
											"    ],",
											"    \"staffInCharge\": pm.collectionVariables.get(\"staffID\"),",
											"    \"isAdopted\": false,",
											"    \"id\": pm.collectionVariables.get(\"catID\"),",
											"};",
											"",
											"pm.test('Correct cat data', function() {",
											"  pm.response.to.have.jsonSchema(schema);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"staffInCharge\": \"{{staffID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat empty staff in charge",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"invalid_string\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"staffInCharge\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cat not valid staff in charge",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Oliver\",",
											"            \"age\": 2,",
											"            \"breed\": \"Persian\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"invalid_string\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"staffInCharge\": \"Cat\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"pm.sendRequest({",
									"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
									"    method: \"POST\",",
									"    header: {",
									"        \"Content-Type\": \"application/json\"",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
									"            \"password\": pm.collectionVariables.get(\"password\").toString()",
									"        })",
									"    }",
									"}, (err, response) => {",
									"    if (err) {",
									"        console.log(\"Error in request:\", err);",
									"    } else {",
									"        console.log(response.json());",
									"        console.log(pm.collectionVariables.get(\"username\"))",
									"        pm.sendRequest({",
									"            url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/login\").toString(),",
									"            method: \"POST\",",
									"            header: {",
									"                \"Content-Type\": \"application/json\",",
									"                \"x-skip-rate-limit\": \"true\"",
									"            },",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({",
									"                    \"username\": pm.collectionVariables.get(\"username\").toString(),",
									"                    \"password\": pm.collectionVariables.get(\"password\").toString()",
									"                })",
									"            }",
									"        }, (err, login) => {",
									"            if (err) {",
									"                console.log(\"Error in request:\", err);",
									"            } else {",
									"                console.log(login.json());",
									"                pm.collectionVariables.set(\"token\", login.json().accessToken)",
									"            }",
									"        })",
									"    }",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "Delete cat",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": \"Cleo\",",
											"            \"age\": 2,",
											"            \"breed\": \"Siamese\",",
											"            \"dateJoined\": \"2025-05-08T18:50:58.879Z\",",
											"            \"vaccinated\": true,",
											"            \"temperament\": [",
											"                \"Calm\"",
											"            ],",
											"            \"staffInCharge\": \"00000000-0000-0000-0000-000000000000\",",
											"            \"isAdopted\": false",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        pm.collectionVariables.set(\"catID\", response.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete cat non existent id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/cats\").toString(),",
											"    method: \"GET\",",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        console.log(response.json().id)",
											"        const elements = response.json()",
											"        let ids = []",
											"        elements.forEach((element) =>",
											"            ids.push(element.id)",
											"        )",
											"        console.log(ids)",
											"        const lastID = Math.max(...ids)",
											"        pm.collectionVariables.set(\"catID\", lastID + 1);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Cat not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete cat not valid id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"try {",
											"    pm.collectionVariables.set(\"catID\", \"Cat\");",
											"} catch (err) {",
											"    console.error(err);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Cat not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete cat empty id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"try {",
											"    pm.collectionVariables.set(\"catID\", \"\");",
											"} catch (err) {",
											"    console.error(err);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Authentication required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete cat empty id authorized",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\"",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"            \"password\": pm.collectionVariables.get(\"password\").toString()",
											"        })",
											"    }",
											"}, (err, response) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(response.json());",
											"        pm.sendRequest({",
											"            url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/login\").toString(),",
											"            method: \"POST\",",
											"            header: {",
											"                \"Content-Type\": \"application/json\",",
											"                \"x-skip-rate-limit\": \"true\"",
											"            },",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({",
											"                    \"username\": pm.collectionVariables.get(\"username\").toString(),",
											"                    \"password\": pm.collectionVariables.get(\"password\").toString()",
											"                })",
											"            }",
											"        }, (err, login) => {",
											"            if (err) {",
											"                console.log(\"Error in request:\", err);",
											"            } else {",
											"                console.log(login.json());",
											"                pm.collectionVariables.set(\"token\", login.json().accessToken)",
											"                pm.collectionVariables.set(\"catID\", \"\");",
											"            }",
											"        })",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Cannot DELETE /api/cats/\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/cats/{{catID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"cats",
										"{{catID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Staff",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "All staff members",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Staff member by id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/staff\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\",",
											"        \"Authorization\": \"Bearer \" + pm.collectionVariables.get(\"token\")",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": pm.collectionVariables.get(\"staffName\").toString(),",
											"            \"lastName\": pm.collectionVariables.get(\"staffLastName\").toString(),",
											"            \"age\": 30,",
											"            \"dateJoined\": \"2025-05-09T18:24:45.220Z\",",
											"            \"role\": \"Assistant\"",
											"        })",
											"    }",
											"}, (err, addStaff) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(addStaff.json());",
											"        pm.collectionVariables.set(\"staffID\", addStaff.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"    \"name\": pm.collectionVariables.get(\"staffName\"),",
											"    \"lastName\": pm.collectionVariables.get(\"staffLastName\"),",
											"    \"age\": 30,",
											"    \"dateJoined\": \"2025-05-09T18:24:45.220Z\",",
											"    \"role\": \"Assistant\",",
											"    \"id\": pm.collectionVariables.get(\"staffID\")",
											"};",
											"",
											"pm.test('Correct staff member data', function () {",
											"    pm.response.to.have.jsonSchema(schema);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/staff/{{staffID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff",
										"{{staffID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Staff member non existent id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/staff\").toString(),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\",",
											"        \"Authorization\": \"Bearer \" + pm.collectionVariables.get(\"token\")",
											"    },",
											"}, (err, staff) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        const elements = staff.json()",
											"        let ids = []",
											"        elements.forEach((element) =>",
											"            ids.push(element.id)",
											"        )",
											"        console.log(ids)",
											"        pm.collectionVariables.set(\"staffID\", 123);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Staff member not found\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Staff member not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/staff/{{staffID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff",
										"{{staffID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Staff member not valid id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"try {",
											"    pm.collectionVariables.set(\"staffID\", \"Cat\");",
											"} catch (err) {",
											"    console.error(err);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Staff member not found\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Staff member not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/staff/{{staffID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff",
										"{{staffID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "Add staff member",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{staffName}}\",\r\n  \"lastName\": \"{{staffLastName}}\",\r\n  \"age\": 30,\r\n  \"dateJoined\": \"2025-05-09T18:24:45.220Z\",\r\n  \"role\": \"Assistant\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add staff member empty name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"String must contain at least 1 character(s)\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"\",\r\n  \"lastName\": \"{{staffLastName}}\",\r\n  \"age\": 30,\r\n  \"dateJoined\": \"2025-05-09T18:24:45.220Z\",\r\n  \"role\": \"Assistant\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add staff member without name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"lastName\": \"{{staffLastName}}\",\r\n  \"age\": 30,\r\n  \"dateJoined\": \"2025-05-09T18:24:45.220Z\",\r\n  \"role\": \"Assistant\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add staff member empty last name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"String must contain at least 1 character(s)\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{staffName}}\",\r\n  \"lastName\": \"\",\r\n  \"age\": 30,\r\n  \"dateJoined\": \"2025-05-09T18:24:45.220Z\",\r\n  \"role\": \"Assistant\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add staff member without last name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{staffName}}\",\r\n  \"age\": 30,\r\n  \"dateJoined\": \"2025-05-09T18:24:45.220Z\",\r\n  \"role\": \"Assistant\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add staff member negative age",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Number must be greater than or equal to 18\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{staffName}}\",\r\n  \"lastName\": \"{{staffLastName}}\",\r\n  \"age\": -1,\r\n  \"dateJoined\": \"2025-05-09T18:24:45.220Z\",\r\n  \"role\": \"Assistant\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add staff member string age",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Expected number, received string\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{staffName}}\",\r\n  \"lastName\": \"{{staffLastName}}\",\r\n  \"age\": \"30\",\r\n  \"dateJoined\": \"2025-05-09T18:24:45.220Z\",\r\n  \"role\": \"Assistant\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add staff member without age",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{staffName}}\",\r\n  \"lastName\": \"{{staffLastName}}\",\r\n  \"dateJoined\": \"2025-05-09T18:24:45.220Z\",\r\n  \"role\": \"Assistant\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add staff member empty date joined",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Expected date, received null\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{staffName}}\",\r\n  \"lastName\": \"{{staffLastName}}\",\r\n  \"age\": 18,\r\n  \"dateJoined\": \"\",\r\n  \"role\": \"Assistant\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add staff member null date joined",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Expected date, received null\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{staffName}}\",\r\n  \"lastName\": \"{{staffLastName}}\",\r\n  \"age\": 18,\r\n  \"dateJoined\": null,\r\n  \"role\": \"Assistant\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add staff member without date joined",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{staffName}}\",\r\n  \"lastName\": \"{{staffLastName}}\",\r\n  \"age\": 18,\r\n  \"role\": \"Assistant\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add staff member empty role",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"String must contain at least 1 character(s)\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{staffName}}\",\r\n  \"lastName\": \"{{staffLastName}}\",\r\n  \"age\": 34,\r\n  \"dateJoined\": \"2025-05-09T18:24:45.220Z\",\r\n  \"role\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add staff member without role",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{staffName}}\",\r\n  \"lastName\": \"{{staffLastName}}\",\r\n  \"age\": 34,\r\n  \"dateJoined\": \"2025-05-09T18:24:45.220Z\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "Remove staff member",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/staff\").toString(),",
											"    method: \"POST\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\",",
											"        \"Authorization\": \"Bearer \" + pm.collectionVariables.get(\"token\")",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"name\": pm.collectionVariables.get(\"staffName\").toString(),",
											"            \"lastName\": pm.collectionVariables.get(\"staffLastName\").toString(),",
											"            \"age\": 30,",
											"            \"dateJoined\": \"2025-05-09T18:24:45.220Z\",",
											"            \"role\": \"Assistant\"",
											"        })",
											"    }",
											"}, (err, addStaff) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        console.log(addStaff.json());",
											"        pm.collectionVariables.set(\"staffID\", addStaff.json().id);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff/{{staffID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff",
										"{{staffID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove staff member non existent id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/staff\").toString(),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Content-Type\": \"application/json\",",
											"        \"Authorization\": \"Bearer \" + pm.collectionVariables.get(\"token\")",
											"    },",
											"}, (err, staff) => {",
											"    if (err) {",
											"        console.log(\"Error in request:\", err);",
											"    } else {",
											"        const elements = staff.json()",
											"        let ids = []",
											"        elements.forEach((element) =>",
											"            ids.push(element.id)",
											"        )",
											"        console.log(ids)",
											"        pm.collectionVariables.set(\"staffID\", 123);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Staff not found\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Staff not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff/{{staffID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff",
										"{{staffID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove staff member not valid id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"try {",
											"    pm.collectionVariables.set(\"staffID\", \"Cat\");",
											"} catch (err) {",
											"    console.error(err);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Staff not found\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Staff not found\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff/{{staffID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff",
										"{{staffID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove staff member empty id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"try {",
											"    pm.collectionVariables.set(\"staffID\", \"\");",
											"} catch (err) {",
											"    console.error(err);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Staff not found\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Cannot DELETE /api/staff/\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/staff/{{staffID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"staff",
										"{{staffID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"pm.sendRequest({",
							"    url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/register\").toString(),",
							"    method: \"POST\",",
							"    header: {",
							"        \"Content-Type\": \"application/json\"",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            \"username\": pm.collectionVariables.get(\"username\").toString(),",
							"            \"password\": pm.collectionVariables.get(\"password\").toString()",
							"        })",
							"    }",
							"}, (err, response) => {",
							"    if (err) {",
							"        console.log(\"Error in request:\", err);",
							"    } else {",
							"        console.log(response.json());",
							"        console.log(pm.collectionVariables.get(\"username\"))",
							"        pm.sendRequest({",
							"            url: (pm.collectionVariables.get(\"base_url\") + \"/api/auth/login\").toString(),",
							"            method: \"POST\",",
							"            header: {",
							"                \"Content-Type\": \"application/json\",",
							"                \"x-skip-rate-limit\": \"true\",",
							"            },",
							"            body: {",
							"                mode: 'raw',",
							"                raw: JSON.stringify({",
							"                    \"username\": pm.collectionVariables.get(\"username\").toString(),",
							"                    \"password\": pm.collectionVariables.get(\"password\").toString()",
							"                })",
							"            }",
							"        }, (err, login) => {",
							"            if (err) {",
							"                console.log(\"Error in request:\", err);",
							"            } else {",
							"                console.log(login.json());",
							"                pm.collectionVariables.set(\"token\", login.json().accessToken)",
							"            }",
							"        })",
							"    }",
							"});",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"const {Property} = require('postman-collection'); ",
					"let adopterName = Property.replaceSubstitutions(\"{{$randomFirstName}}\");",
					"let adopterLastName = Property.replaceSubstitutions(\"{{$randomLastName}}\");",
					"let adopterPhone = Property.replaceSubstitutions(\"{{$randomPhoneNumber}}\");",
					"let adopterAddress = Property.replaceSubstitutions(\"{{$randomStreetAddress}}\");",
					"let username = Property.replaceSubstitutions(\"{{$randomUserName}}\");",
					"let password = Property.replaceSubstitutions(\"{{$randomPassword}}\");",
					"let staffName = Property.replaceSubstitutions(\"{{$randomFirstName}}\");",
					"let staffLastName = Property.replaceSubstitutions(\"{{$randomLastName}}\");",
					"",
					"pm.collectionVariables.set(\"adopterName\", adopterName);",
					"pm.collectionVariables.set(\"adopterLastName\", adopterLastName);",
					"pm.collectionVariables.set(\"adopterPhone\", adopterPhone);",
					"pm.collectionVariables.set(\"adopterAddress\", adopterAddress);",
					"pm.collectionVariables.set(\"username\", username);",
					"pm.collectionVariables.set(\"password\", password);",
					"pm.collectionVariables.set(\"staffName\", staffName);",
					"pm.collectionVariables.set(\"staffLastName\", staffLastName);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": []
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "adopterName",
			"value": "",
			"type": "string"
		},
		{
			"key": "adopterLastName",
			"value": ""
		},
		{
			"key": "adopterPhone",
			"value": ""
		},
		{
			"key": "adopterAddress",
			"value": ""
		},
		{
			"key": "adopterID",
			"value": ""
		},
		{
			"key": "catID",
			"value": ""
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "staffName",
			"value": ""
		},
		{
			"key": "staffLastName",
			"value": ""
		},
		{
			"key": "staffID",
			"value": ""
		}
	]
}